---------------------------------------------------------
v-1
version: 0.2

phases:
  install:
    commands:
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      # Install SnowSQL
      - curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.24-linux_x86_64.bash
      - bash snowsql-1.2.24-linux_x86_64.bash
      # Edit SnowSQL configuration file and add Snowflake user's username and password
      - echo -e '[connections]\naccountname = ll95421\nusername = tecodpp_dev_user\npassword = <replace_with_password>\n' >> ~/.snowsql/config

  build:
    commands:
      # Clone CodeCommit repository
      - git clone https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/snowflake-test codecommit-repo

      # Execute SQL script
      - snowsql -a ll95421.ap-south-1.aws.snowflakecomputing.com -w ppg_teco_dpp_wh -r tecodpp_dev_role -s test_sc1 -f codecommit-repo/sql_script.sql
      =========================================================================
v-2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.24-linux_x86_64.bash
      - chmod +x snowsql-1.2.24-linux_x86_64.bash
      - ./snowsql-1.2.24-linux_x86_64.bash
      - mkdir -p ~/.snowsql
      - printf "[connections]\n" >> ~/.snowsql/config
      - printf "accountname = <your_account_name>\n" >> ~/.snowsql/config
      - printf "username = <your_username>\n" >> ~/.snowsql/config
      - printf "password = <your_password>\n" >> ~/.snowsql/config

  build:
    commands:
      # Clone CodeCommit repository
      - git clone https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/snowflake-test codecommit-repo

      # Execute SQL script
      - snowsql -a ll95421.ap-south-1.aws.snowflakecomputing.com -s test_sc1 -f codecommit-repo/sql_script.sql


Replace <your_account_name>, <your_username>, and <your_password> with the appropriate values for your Snowflake account.

This buildspec installs SnowSQL and sets up a ~/.snowsql/config file with the connection information for your Snowflake account. 
The snowsql command in the build phase can then reference the configuration information to execute SQL scripts against your Snowflake account.

=======================================================
v-3
version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.24-linux_x86_64.bash
      - chmod +x snowsql-1.2.24-linux_x86_64.bash
      # Create .bashrc file if it doesn't exist
      - touch ~/.bashrc
      - SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.bashrc bash snowsql-1.2.24-linux_x86_64.bash
      - mkdir -p ~/.snowsql
      - printf "[connections]\n" >> ~/.snowsql/config
      - printf "accountname = ll95421\n" >> ~/.snowsql/config
      - printf "username = tecodpp_dev_user\n" >> ~/.snowsql/config
      - printf "password = snowdevPolicy@1\n" >> ~/.snowsql/config
  build:
    commands:
      # Clone CodeCommit repository
      - git clone https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/snowflake-test codecommit-repo

      # Execute SQL script
      - snowsql -a ll95421.ap-south-1.aws.snowflakecomputing.com -s test_sc1 -f codecommit-repo/sql_script.sql
      
  ----------------------------------------------------------------------------------------------------------------------------
we need to open ~/.snowsql/config file and add 
accountname = LL95421
region = ap-south-1.aws
username = tecodpp_dev_user
password = snowdevPolicy@1

also edit log file location in config file as 
log_file = ~/.snowsql_rt.log

-------------------------------
below is the config file 


[connections]          
# *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*
# 
# The Snowflake user password is stored in plain text in this file.
# Pay special attention to the management of this file.
# Thank you.
# 
# *WARNING* *WARNING* *WARNING* *WARNING* *WARNING* *WARNING*

#If a connection doesn't specify a value, it will default to these
#
#accountname = defaultaccount  
#region = defaultregion
#username = defaultuser
#password = defaultpassword
#dbname = defaultdbname
#schemaname = defaultschema
#warehousename = defaultwarehouse
#rolename = defaultrolename
#proxy_host = defaultproxyhost
#proxy_port = defaultproxyport

[connections.example]
#Can be used in SnowSql as #connect example

accountname = accountname
username = username
password = password1234

[variables]
# SnowSQL defines the variables in this section on startup.
# You can use these variables in SQL statements. For details, see
# https://docs.snowflake.com/en/user-guide/snowsql-use.html#using-variables

# example_variable=27

[options]
# If set to false auto-completion will not occur interactive mode.
auto_completion = True

# main log file location. The file includes the log from SnowSQL main
# executable.
log_file = ~/.snowsql_rt.log

# bootstrap log file location. The file includes the log from SnowSQL bootstrap
# executable.
# log_bootstrap_file = ~/.snowsql/log_bootstrap

# Default log level. Possible values: "CRITICAL", "ERROR", "WARNING", "INFO"
# and "DEBUG".
log_level = DEBUG

# Timing of sql statments and table rendering.
timing = True

# Table format. Possible values: psql, plain, simple, grid, fancy_grid, pipe,
# orgtbl, rst, mediawiki, html, latex, latex_booktabs, tsv.
# Recommended: psql, fancy_grid and grid.
output_format = psql

# Keybindings: Possible values: emacs, vi.
# Emacs mode: Ctrl-A is home, Ctrl-E is end. All emacs keybindings are available in the REPL.
# When Vi mode is enabled you can use modal editing features offered by Vi in the REPL.
key_bindings = emacs

# OCSP Fail Open Mode.
# The only OCSP scenario which will lead to connection failure would be OCSP response with a
# revoked status. Any other errors or in the OCSP module will not raise an error.
# ocsp_fail_open = True

# Enable temporary credential file for Linux users
# For Linux users, since there are no OS-key-store, an unsecure temporary credential for SSO can be enabled by this option. The default value for this option is False.
# client_store_temporary_credential = True

# Select statement split method (default is to use the sql_split method in snowsql, which does not support 'sql_delimiter')
# sql_split = snowflake.connector.util_text # to use connector's statement_split which has legacy support to 'sql_delimiter'.

# Repository Base URL
# The endpoint to download the SnowSQL main module.
repository_base_url = https://sfc-repo.snowflakecomputing.com/snowsql
-----------------------------------------------------------------------
v-4

version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.24-linux_x86_64.bash
      - chmod +x snowsql-1.2.24-linux_x86_64.bash
      # Create .bashrc file if it doesn't exist
      - touch ~/.bashrc
      - SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.bashrc bash snowsql-1.2.24-linux_x86_64.bash
      - mkdir -p ~/.snowsql
      - printf "[connections]\n" >> ~/.snowsql/config
      - printf "accountname = LL95421\n" >> ~/.snowsql/config
      - printf "region = ap-south-1.aws\n" >> ~/.snowsql/config
      - printf "username = tecodpp_dev_user\n" >> ~/.snowsql/config
      - printf "password = snowdevPolicy@1\n" >> ~/.snowsql/config
      - sed -i 's/log_file = .*/log_file = ~\/.snowsql_rt.log/g' ~/.snowsql/config
  build:
    commands:
      # Clone CodeCommit repository
      - git clone https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/snowflake-test codecommit-repo

      # Execute SQL script
      - snowsql -a ll95421.ap-south-1.aws.snowflakecomputing.com -s test_sc1 -f codecommit-repo/sql_script.sql



[Container] 2023/03/07 10:09:28 Running command snowsql -a ll95421.ap-south-1.aws.snowflakecomputing.com -w ppg_teco_dpp_wh -r tecodpp_dev_role -s test_sc1 -f codecommit-repo/sql_script.sql
/codebuild/output/tmp/script.sh: line 4: snowsql: command not found

[Container] 2023/03/07 10:09:28 Command did not exit successfully snowsql -a ll95421.ap-south-1.aws.snowflakecomputing.com -w ppg_teco_dpp_wh -r tecodpp_dev_role -s test_sc1 -f codecommit-repo/sql_script.sql exit status 127
[Container] 2023/03/07 10:09:28 Phase complete: BUILD State: FAILED
[Container] 2023/03/07 10:09:28 Phase context status code: COMMAND_EXECUTION_ERROR Message: Error while executing command: snowsql -a ll95421.ap-south-1.aws.snowflakecomputing.com -w ppg_teco_dpp_wh -r tecodpp_dev_role -s test_sc1 -f codecommit-repo/sql_script.sql. Reason: exit status 127
[Container] 2023/03/07 10:09:28 Entering phase POST_BUILD
[Container] 2023/03/07 10:09:28 Phase complete: POST_BUILD State: SUCCEEDED
[Container] 2023/03/07 10:09:28 Phase context status code:  Message: 

============================
v-5

version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - git config --global credential.helper '!aws codecommit credential-helper $@'
      - git config --global credential.UseHttpPath true
      - curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.24-linux_x86_64.bash
      - chmod +x snowsql-1.2.24-linux_x86_64.bash
      # Create .bashrc file if it doesn't exist
      - touch ~/.bashrc
      - SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.bashrc bash snowsql-1.2.24-linux_x86_64.bash
      - mkdir -p ~/.snowsql
      - printf "[connections]\n" >> ~/.snowsql/config
      - printf "accountname = LL95421\n" >> ~/.snowsql/config
      - printf "region = ap-south-1.aws\n" >> ~/.snowsql/config
      - printf "username = tecodpp_dev_user\n" >> ~/.snowsql/config
      - printf "password = snowdevPolicy@1\n" >> ~/.snowsql/config
      - sed -i 's/log_file = .*/log_file = ~\/.snowsql_rt.log/g' ~/.snowsql/config
      - echo 'export PATH=~/bin:$PATH' >> ~/.bashrc
  build:
    commands:
      # Clone CodeCommit repository
      - git clone https://git-codecommit.ap-south-1.amazonaws.com/v1/repos/snowflake-test codecommit-repo

      # Execute SQL script
      - snowsql -a ll95421.ap-south-1.aws.snowflakecomputing.com -w ppg_teco_dpp_wh -r tecodpp_dev_role -s test_sc1 -f codecommit-repo/sql_script.sql

This is because that directory /home/ec2-user/bin is not included in your PATH.

So modify your .bash_profile and add the line

export PATH=/home/ec2-user/bin:$PATH
